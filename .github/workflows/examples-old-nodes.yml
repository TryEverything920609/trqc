name: Examples E2E (old nodes)
on: [push]
jobs:
  e2e-old-nodes:
    container:
      image: mcr.microsoft.com/playwright:v1.20.0-focal
      options: --user 1001
    env:
      PLAYWRIGHT_BROWSERS_PATH: ${{ github.workspace }}/playwright
      DATABASE_URL: postgresql://postgres:@postgres:5432/trpcdb
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        dir: [.interop/next-prisma-starter]
        # start example with:
        node-start: ['14.x']
        os: [ubuntu-latest]
    services:
      postgres:
        image: postgres:12.1
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: trpcdb
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2.2.2

      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'pnpm'

      - name: Cache Playwright's binary
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-playwright-bin-v1
          path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}

      - run: node -v
      - name: Install deps and build (with cache)
        run: pnpm install

      - name: Next.js cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}${{ matrix.dir }}/.next/cache
          key: ${{ matrix.dir }}-${{ runner.os }}-${{ matrix.node-start }}-${{ hashFiles('**/pnpm-lock.yaml') }}-nextjs

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-start }}

      - run: node -v

      - name: if exists, run pnpm lint
        run: cd examples/${{ matrix.dir }} && cat package.json | if grep --silent '"lint"'; then pnpm lint; fi
      - run: pnpm --filter ./examples/${{ matrix.dir }} build
      - run: pnpm --filter ./examples/${{ matrix.dir }} test-start
      - run: pnpm --filter ./examples/${{ matrix.dir }} test-dev
